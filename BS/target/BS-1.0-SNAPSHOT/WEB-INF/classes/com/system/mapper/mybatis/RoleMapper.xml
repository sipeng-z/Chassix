<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.system.mapper.mybatis.RoleMapper">
  <resultMap id="BaseResultMap" type="com.system.domain.entity.Role">
    <id column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="created_user_id" jdbcType="VARCHAR" property="createdUserId" />
    <result column="created_user_name" jdbcType="VARCHAR" property="createdUserName" />
    <result column="created_date_time" jdbcType="TIMESTAMP" property="createdDateTime" />
    <result column="last_updated_user_id" jdbcType="VARCHAR" property="lastUpdatedUserId" />
    <result column="last_updated_user_name" jdbcType="VARCHAR" property="lastUpdatedUserName" />
    <result column="last_updated_date_time" jdbcType="TIMESTAMP" property="lastUpdatedDateTime" />
    <result column="audit_state" jdbcType="INTEGER" property="auditState" />
    <result column="audit_user_id" jdbcType="VARCHAR" property="auditUserId" />
    <result column="audit_user_name" jdbcType="VARCHAR" property="auditUserName" />
    <result column="audit_date_time" jdbcType="TIMESTAMP" property="auditDateTime" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, name, description, state, created_user_id, created_user_name, created_date_time,
    last_updated_user_id, last_updated_user_name, last_updated_date_time, audit_state, 
    audit_user_id, audit_user_name, audit_date_time, is_deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from system_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from system_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.system.domain.entity.Role">
    insert into system_role (role_id, name,
      description, state, created_user_id, 
      created_user_name, created_date_time, last_updated_user_id, 
      last_updated_user_name, last_updated_date_time, 
      audit_state, audit_user_id, audit_user_name, 
      audit_date_time, is_deleted)
    values (#{roleId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{createdUserId,jdbcType=VARCHAR},
      #{createdUserName,jdbcType=VARCHAR}, #{createdDateTime,jdbcType=TIMESTAMP}, #{lastUpdatedUserId,jdbcType=VARCHAR},
      #{lastUpdatedUserName,jdbcType=VARCHAR}, #{lastUpdatedDateTime,jdbcType=TIMESTAMP}, 
      #{auditState,jdbcType=INTEGER}, #{auditUserId,jdbcType=VARCHAR}, #{auditUserName,jdbcType=VARCHAR},
      #{auditDateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.system.domain.entity.Role">
    insert into system_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createdUserId != null">
        created_user_id,
      </if>
      <if test="createdUserName != null">
        created_user_name,
      </if>
      <if test="createdDateTime != null">
        created_date_time,
      </if>
      <if test="lastUpdatedUserId != null">
        last_updated_user_id,
      </if>
      <if test="lastUpdatedUserName != null">
        last_updated_user_name,
      </if>
      <if test="lastUpdatedDateTime != null">
        last_updated_date_time,
      </if>
      <if test="auditState != null">
        audit_state,
      </if>
      <if test="auditUserId != null">
        audit_user_id,
      </if>
      <if test="auditUserName != null">
        audit_user_name,
      </if>
      <if test="auditDateTime != null">
        audit_date_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createdUserId != null">
        #{createdUserId,jdbcType=VARCHAR},
      </if>
      <if test="createdUserName != null">
        #{createdUserName,jdbcType=VARCHAR},
      </if>
      <if test="createdDateTime != null">
        #{createdDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedUserId != null">
        #{lastUpdatedUserId,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatedUserName != null">
        #{lastUpdatedUserName,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatedDateTime != null">
        #{lastUpdatedDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditState != null">
        #{auditState,jdbcType=INTEGER},
      </if>
      <if test="auditUserId != null">
        #{auditUserId,jdbcType=VARCHAR},
      </if>
      <if test="auditUserName != null">
        #{auditUserName,jdbcType=VARCHAR},
      </if>
      <if test="auditDateTime != null">
        #{auditDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.system.domain.entity.Role">
    update system_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createdUserId != null">
        created_user_id = #{createdUserId,jdbcType=VARCHAR},
      </if>
      <if test="createdUserName != null">
        created_user_name = #{createdUserName,jdbcType=VARCHAR},
      </if>
      <if test="createdDateTime != null">
        created_date_time = #{createdDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedUserId != null">
        last_updated_user_id = #{lastUpdatedUserId,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatedUserName != null">
        last_updated_user_name = #{lastUpdatedUserName,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatedDateTime != null">
        last_updated_date_time = #{lastUpdatedDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditState != null">
        audit_state = #{auditState,jdbcType=INTEGER},
      </if>
      <if test="auditUserId != null">
        audit_user_id = #{auditUserId,jdbcType=VARCHAR},
      </if>
      <if test="auditUserName != null">
        audit_user_name = #{auditUserName,jdbcType=VARCHAR},
      </if>
      <if test="auditDateTime != null">
        audit_date_time = #{auditDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.system.domain.entity.Role">
    update system_role
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      created_user_id = #{createdUserId,jdbcType=VARCHAR},
      created_user_name = #{createdUserName,jdbcType=VARCHAR},
      created_date_time = #{createdDateTime,jdbcType=TIMESTAMP},
      last_updated_user_id = #{lastUpdatedUserId,jdbcType=VARCHAR},
      last_updated_user_name = #{lastUpdatedUserName,jdbcType=VARCHAR},
      last_updated_date_time = #{lastUpdatedDateTime,jdbcType=TIMESTAMP},
      audit_state = #{auditState,jdbcType=INTEGER},
      audit_user_id = #{auditUserId,jdbcType=VARCHAR},
      audit_user_name = #{auditUserName,jdbcType=VARCHAR},
      audit_date_time = #{auditDateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>






  <!-- 表名 -->
  <sql id="tableName">
    system_role
  </sql>
  <!-- 表名对外引用 -->
  <sql id="tableNameOut">
    <bind name="tableName" value="'system_role'"/>
  </sql>
  <!-- 主键 -->
  <sql id="pkId">
    <bind name="pkName" value="'role_id'"/>
  </sql>

  <!-- 批量删除-->
  <update id="delete" parameterType="String">
    <include refid="tableNameOut"></include>
    <include refid="pkId"></include>
    <include refid="SystemBasicMapper.deleteSql"></include>
  </update>
  <!-- 批量审核-->
  <update id="audit" parameterType="String">
    <include refid="tableNameOut"></include>
    <include refid="pkId"></include>
    <include refid="SystemBasicMapper.updateAuditSql"></include>
  </update>

  <!--动态sql分页列表-->
  <select id="list" resultMap="BaseResultMap" parameterType="com.domain.model.PageData">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
    <include refid="tableName"></include>
    WHERE 1 = 1 and is_deleted = 0

    <include refid="SystemBasicMapper.retrieveSql"></include>
    ORDER BY  last_updated_date_time desc
  </select>

  <select id="findByPkId" parameterType="com.domain.model.PageData" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    <include refid="tableName"></include>
    where role_id = #{id,jdbcType=VARCHAR} AND is_deleted = 0
  </select>


  <select id="checkSerialClass" parameterType="com.domain.model.PageData" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    <include refid="tableName"></include>
    where role_id != #{id,jdbcType=INTEGER} AND is_deleted = 0
    AND name= #{name,jdbcType=VARCHAR}
  </select>

  <select id="checkSerialClassAdd" parameterType="com.domain.model.PageData" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    <include refid="tableName"></include>
    where is_deleted = 0
    AND name= #{name,jdbcType=VARCHAR}
  </select>


</mapper>