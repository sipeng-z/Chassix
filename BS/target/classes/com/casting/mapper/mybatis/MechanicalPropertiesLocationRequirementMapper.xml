<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.casting.mapper.mybatis.MechanicalPropertiesLocationRequirementMapper">
  <resultMap id="BaseResultMap" type="com.casting.domain.model.output.MechanicalPropertiesLocationRequirementOutput">
    <id column="Requirement_Id" jdbcType="VARCHAR" property="requirementId" />
    <result column="Part_Name" jdbcType="VARCHAR" property="partName" />
    <result column="Require_Quantity" jdbcType="INTEGER" property="requireQuantity" />
    <result column="YSA" jdbcType="VARCHAR" property="ysa" />
    <result column="YSB" jdbcType="VARCHAR" property="ysb" />
    <result column="YSC" jdbcType="VARCHAR" property="ysc" />
    <result column="YSD" jdbcType="VARCHAR" property="ysd" />
    <result column="UTSA" jdbcType="VARCHAR" property="utsa" />
    <result column="UTSB" jdbcType="VARCHAR" property="utsb" />
    <result column="UTSC" jdbcType="VARCHAR" property="utsc" />
    <result column="UTSD" jdbcType="VARCHAR" property="utsd" />
    <result column="ELONGATIONA" jdbcType="VARCHAR" property="elongationa" />
    <result column="ELONGATIONB" jdbcType="VARCHAR" property="elongationb" />
    <result column="ELONGATIONC" jdbcType="VARCHAR" property="elongationc" />
    <result column="ELONGATIOND" jdbcType="VARCHAR" property="elongationd" />
    <result column="HB" jdbcType="INTEGER" property="hb" />
    <result column="YSE" jdbcType="VARCHAR" property="yse" />
    <result column="UTSE" jdbcType="VARCHAR" property="utse" />
    <result column="ELONGATIONE" jdbcType="VARCHAR" property="elongatione" />
  </resultMap>
  <sql id="Base_Column_List">
    Requirement_Id, Part_Name, Require_Quantity, YSA, YSB, YSC, YSD, UTSA, UTSB, UTSC, 
    UTSD, ELONGATIONA, ELONGATIONB, ELONGATIONC, ELONGATIOND, HB, YSE, UTSE, ELONGATIONE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dbo.Mechanical_Properties_Location_Requirement
    where Requirement_Id = #{requirementId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from dbo.Mechanical_Properties_Location_Requirement
    where Requirement_Id = #{requirementId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.casting.domain.entity.MechanicalPropertiesLocationRequirement">
    insert into dbo.Mechanical_Properties_Location_Requirement (Requirement_Id, Part_Name, Require_Quantity, 
      YSA, YSB, YSC, YSD, 
      UTSA, UTSB, UTSC, UTSD, 
      ELONGATIONA, ELONGATIONB, ELONGATIONC, 
      ELONGATIOND, HB, YSE, 
      UTSE, ELONGATIONE)
    values (#{requirementId,jdbcType=VARCHAR}, #{partName,jdbcType=VARCHAR}, #{requireQuantity,jdbcType=INTEGER}, 
      #{ysa,jdbcType=VARCHAR}, #{ysb,jdbcType=VARCHAR}, #{ysc,jdbcType=VARCHAR}, #{ysd,jdbcType=VARCHAR}, 
      #{utsa,jdbcType=VARCHAR}, #{utsb,jdbcType=VARCHAR}, #{utsc,jdbcType=VARCHAR}, #{utsd,jdbcType=VARCHAR}, 
      #{elongationa,jdbcType=VARCHAR}, #{elongationb,jdbcType=VARCHAR}, #{elongationc,jdbcType=VARCHAR}, 
      #{elongationd,jdbcType=VARCHAR}, #{hb,jdbcType=INTEGER}, #{yse,jdbcType=VARCHAR}, 
      #{utse,jdbcType=VARCHAR}, #{elongatione,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.casting.domain.entity.MechanicalPropertiesLocationRequirement">
    insert into dbo.Mechanical_Properties_Location_Requirement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="requirementId != null">
        Requirement_Id,
      </if>
      <if test="partName != null">
        Part_Name,
      </if>
      <if test="requireQuantity != null">
        Require_Quantity,
      </if>
      <if test="ysa != null">
        YSA,
      </if>
      <if test="ysb != null">
        YSB,
      </if>
      <if test="ysc != null">
        YSC,
      </if>
      <if test="ysd != null">
        YSD,
      </if>
      <if test="utsa != null">
        UTSA,
      </if>
      <if test="utsb != null">
        UTSB,
      </if>
      <if test="utsc != null">
        UTSC,
      </if>
      <if test="utsd != null">
        UTSD,
      </if>
      <if test="elongationa != null">
        ELONGATIONA,
      </if>
      <if test="elongationb != null">
        ELONGATIONB,
      </if>
      <if test="elongationc != null">
        ELONGATIONC,
      </if>
      <if test="elongationd != null">
        ELONGATIOND,
      </if>
      <if test="hb != null">
        HB,
      </if>
      <if test="yse != null">
        YSE,
      </if>
      <if test="utse != null">
        UTSE,
      </if>
      <if test="elongatione != null">
        ELONGATIONE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="requirementId != null">
        #{requirementId,jdbcType=VARCHAR},
      </if>
      <if test="partName != null">
        #{partName,jdbcType=VARCHAR},
      </if>
      <if test="requireQuantity != null">
        #{requireQuantity,jdbcType=INTEGER},
      </if>
      <if test="ysa != null">
        #{ysa,jdbcType=VARCHAR},
      </if>
      <if test="ysb != null">
        #{ysb,jdbcType=VARCHAR},
      </if>
      <if test="ysc != null">
        #{ysc,jdbcType=VARCHAR},
      </if>
      <if test="ysd != null">
        #{ysd,jdbcType=VARCHAR},
      </if>
      <if test="utsa != null">
        #{utsa,jdbcType=VARCHAR},
      </if>
      <if test="utsb != null">
        #{utsb,jdbcType=VARCHAR},
      </if>
      <if test="utsc != null">
        #{utsc,jdbcType=VARCHAR},
      </if>
      <if test="utsd != null">
        #{utsd,jdbcType=VARCHAR},
      </if>
      <if test="elongationa != null">
        #{elongationa,jdbcType=VARCHAR},
      </if>
      <if test="elongationb != null">
        #{elongationb,jdbcType=VARCHAR},
      </if>
      <if test="elongationc != null">
        #{elongationc,jdbcType=VARCHAR},
      </if>
      <if test="elongationd != null">
        #{elongationd,jdbcType=VARCHAR},
      </if>
      <if test="hb != null">
        #{hb,jdbcType=INTEGER},
      </if>
      <if test="yse != null">
        #{yse,jdbcType=VARCHAR},
      </if>
      <if test="utse != null">
        #{utse,jdbcType=VARCHAR},
      </if>
      <if test="elongatione != null">
        #{elongatione,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.casting.domain.entity.MechanicalPropertiesLocationRequirement">
    update dbo.Mechanical_Properties_Location_Requirement
    <set>
      <if test="partName != null">
        Part_Name = #{partName,jdbcType=VARCHAR},
      </if>
      <if test="requireQuantity != null">
        Require_Quantity = #{requireQuantity,jdbcType=INTEGER},
      </if>
      <if test="ysa != null">
        YSA = #{ysa,jdbcType=VARCHAR},
      </if>
      <if test="ysb != null">
        YSB = #{ysb,jdbcType=VARCHAR},
      </if>
      <if test="ysc != null">
        YSC = #{ysc,jdbcType=VARCHAR},
      </if>
      <if test="ysd != null">
        YSD = #{ysd,jdbcType=VARCHAR},
      </if>
      <if test="utsa != null">
        UTSA = #{utsa,jdbcType=VARCHAR},
      </if>
      <if test="utsb != null">
        UTSB = #{utsb,jdbcType=VARCHAR},
      </if>
      <if test="utsc != null">
        UTSC = #{utsc,jdbcType=VARCHAR},
      </if>
      <if test="utsd != null">
        UTSD = #{utsd,jdbcType=VARCHAR},
      </if>
      <if test="elongationa != null">
        ELONGATIONA = #{elongationa,jdbcType=VARCHAR},
      </if>
      <if test="elongationb != null">
        ELONGATIONB = #{elongationb,jdbcType=VARCHAR},
      </if>
      <if test="elongationc != null">
        ELONGATIONC = #{elongationc,jdbcType=VARCHAR},
      </if>
      <if test="elongationd != null">
        ELONGATIOND = #{elongationd,jdbcType=VARCHAR},
      </if>
      <if test="hb != null">
        HB = #{hb,jdbcType=INTEGER},
      </if>
      <if test="yse != null">
        YSE = #{yse,jdbcType=VARCHAR},
      </if>
      <if test="utse != null">
        UTSE = #{utse,jdbcType=VARCHAR},
      </if>
      <if test="elongatione != null">
        ELONGATIONE = #{elongatione,jdbcType=VARCHAR},
      </if>
    </set>
    where Requirement_Id = #{requirementId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.casting.domain.entity.MechanicalPropertiesLocationRequirement">
    update dbo.Mechanical_Properties_Location_Requirement
    set Part_Name = #{partName,jdbcType=VARCHAR},
      Require_Quantity = #{requireQuantity,jdbcType=INTEGER},
      YSA = #{ysa,jdbcType=VARCHAR},
      YSB = #{ysb,jdbcType=VARCHAR},
      YSC = #{ysc,jdbcType=VARCHAR},
      YSD = #{ysd,jdbcType=VARCHAR},
      UTSA = #{utsa,jdbcType=VARCHAR},
      UTSB = #{utsb,jdbcType=VARCHAR},
      UTSC = #{utsc,jdbcType=VARCHAR},
      UTSD = #{utsd,jdbcType=VARCHAR},
      ELONGATIONA = #{elongationa,jdbcType=VARCHAR},
      ELONGATIONB = #{elongationb,jdbcType=VARCHAR},
      ELONGATIONC = #{elongationc,jdbcType=VARCHAR},
      ELONGATIOND = #{elongationd,jdbcType=VARCHAR},
      HB = #{hb,jdbcType=INTEGER},
      YSE = #{yse,jdbcType=VARCHAR},
      UTSE = #{utse,jdbcType=VARCHAR},
      ELONGATIONE = #{elongatione,jdbcType=VARCHAR}
    where Requirement_Id = #{requirementId,jdbcType=VARCHAR}
  </update>




  <!-- tableName -->
  <sql id="tableName">
   dbo.Mechanical_Properties_Location_Requirement
  </sql>
  <!-- tableNameOut -->
  <sql id="tableNameOut">
    <bind name="tableName" value="'dbo.Mechanical_Properties_Location_Requirement'"/>
  </sql>
  <!-- pkId -->
  <sql id="pkId">
    <bind name="pkName" value="'Requirement_Id'"/>
  </sql>

  <!--list-->
  <select id="list" resultMap="BaseResultMap" parameterType="com.domain.model.PageData">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM
    <include refid="tableName"></include>
    WHERE 1 = 1
    <include refid="PmBasicMapper.retrieveSql"></include>
    order by Part_Name  DESC
  </select>

  <!--get one by id-->
  <select id="findByPkId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from <include refid="tableName"></include>
    where Requirement_Id = #{requirementId,jdbcType=VARCHAR}
  </select>


  <!--get one by id-->
  <select id="findByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from <include refid="tableName"></include>
    where Part_Name = #{partName,jdbcType=VARCHAR}

  </select>




</mapper>